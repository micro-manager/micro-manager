# Note: 'nobase_' preserves the directory hierarchy upon installation. See
# Automake manual.
# Note: DLLAutoReloader is left out as it only works on Windows.
# Note: You will fall into an infinite loop if the JAR filenames do not match
# the JARs generated by Ant.
nobase_mmplugin_DATA = \
	Acquisition_Tools/AcquireMultipleRegions.jar \
	Acquisition_Tools/Gaussian.jar \
	Acquisition_Tools/HCS.jar \
	Acquisition_Tools/IntelligentAcquisition.jar \
	Acquisition_Tools/MMTracker.jar \
	Acquisition_Tools/PatternOverlay.jar \
	Acquisition_Tools/SlideExplorer.jar \
	Beta/CRISPv2.jar \
	Beta/SlideExplorer2.jar \
	Big.jar \
	DataBrowser.jar \
	Developer_Tools/ClojureEditor.jar \
	Developer_Tools/SequenceBufferMonitor.jar \
	Device_Control/AutoLase.jar \
	Device_Control/CRISP.jar \
	Device_Control/MultiCamera.jar \
	Device_Control/Projector.jar \
	Device_Control/StageControl.jar \
	Device_Control/pgFocus.jar \
	On-The-Fly_Processors/ImageFlipper.jar \
	On-The-Fly_Processors/MultiChannelShading.jar \
	On-The-Fly_Processors/SplitView.jar \
	PixelCalibrator.jar \
	Recall.jar

.PHONY: plugins.stamp

plugins.stamp:
	@rm -f plugins.tmp
	@touch plugins.tmp
	$(ANT) -Dmm.javacflags="$(JAVACFLAGS)" $(ANTFLAGS) \
		-Dplugin.intdir="`pwd`/build" -Dplugin.outdir="`pwd`" jar
	@mv -f plugins.tmp $@

$(nobase_mmplugin_DATA): plugins.stamp
	@if test -f $@; then :; else \
		rm -f plugins.stamp; \
		$(MAKE) $(AM_MAKEFLAGS) plugins.stamp; \
	fi

CLEANFILES = plugins.stamp

clean-local:
	$(ANT) $(ANTFLAGS) -Dplugin.intdir=`pwd`/build -Dplugin.outdir=`pwd` clean
